const fs = require("fs");
const scanner = require("sonarqube-scanner").default;

let sources = "index.js";

const pkj = JSON.parse(fs.readFileSync("package.json", { encoding: "utf-8" }));

let options = {
  "sonar.projectName": pkj.name,
  "sonar.projectDescription": pkj.description,
  "sonar.projectVersion": pkj.version,
  "sonar.sources": sources,
  "sonar.tests": "test",
  "sonar.eslint.reportPaths": "lint-report.json",
  "sonar.javascript.lcov.reportPaths": "coverage/lcov.info",
  "sonar.coverage.jacoco.xmlReportPaths": "coverage/sonar-report.xml",
  "sonar.testExecutionReportPaths": "coverage/sonar-report.xml",
  "sonar.qualitygate.wait": "true",
  "sonar.log.level": "INFO",
  "sonar.verbose": "false",
};

// SonarQube Integration, uncomment if you want the PR Decorations.
// if ("SONAR_PR_KEY" in process.env) {
//   options = {
//     ...options,
//     ...{
//       "sonar.pullrequest.branch": process.env["SONAR_BRANCH"],
//       "sonar.pullrequest.key": process.env["SONAR_PR_KEY"],
//       "sonar.pullrequest.base": process.env["SONAR_DEST_BRANCH"] || "master",
//     },
//   };
// } else {
//   options = {
//     ...options,
//     ...{ "sonar.branch.name": process.env["SONAR_BRANCH"] || "master" },
//   };
// }
// SonarQube Integration, comment if you don't want the PR Decorations. 
options = {
  ...options,
  ...{
    "sonar.branch.name": process.env["SONAR_BRANCH"] || "master",
    "sonar.links.scm":
      process.env["SONAR_SCM_URL"] ||
      `https://bitbucket.org/aea-tools/${pkj.name}.git`,
  },
};

scanner(
  {
    serverUrl:
      process.env["SONAR_URL"] ||
      "https://sonar.devops.private.aws.aireuropa.com/",
    token: process.env["SONAR_TOKEN"],
    options: options,
  },
  (error) => {
    if (error) {
      console.error(error);
    }
    process.exit();
  },
);
