const fs = require('fs');
const https = require('https');
const axios = require('axios');
const {logger} = require('aea-logger');

let httpsAgent
let optionsVault

/**
 * Carga en variables de entorno los secretos (vault). URL = VAULT_URL + '/v1/secret/' + NOMAD_DC + '/' + NOMAD_JOB_NAME + '.json'
 * y X-Vault-Token contendio en process.env.VAULT_TOKEN
 * ca: process.env.VAULT_CA
 * cert: process.env.VAULT_CLI
 * key: process.env.VAULT_KEY
 * @returns {Promise<void>}
 */
let init = async () => {

    try{
        httpsAgent = new https.Agent({
            ca: fs.readFileSync(process.env['VAULT_CA']),
            cert: fs.readFileSync(process.env['VAULT_CLI']),
            key: fs.readFileSync(process.env['VAULT_KEY'])
        });
    }
    catch(e){
        throw new Error('aea-hashicorp Vault init - reading SSL certificate files: ca(file_path=' + process.env['VAULT_CA'] + ') cert(file_path=' + process.env['VAULT_CLI'] + ') key(file_path=' + process.env['VAULT_KEY'] + '). Check the env vars: VAULT_CA, VAULT_CLI, VAULT_KEY.  ' + e.stack);
    }

    optionsVault = {
        url: process.env.VAULT_KV ? process.env.VAULT_URL + process.env.VAULT_KV : process.env.VAULT_URL + '/v1/secret/' + process.env.NOMAD_DC + '/' + process.env.NOMAD_JOB_NAME + '.json',
        method: 'GET',
        httpsAgent: httpsAgent,
        headers: { 'X-Vault-Token': process.env.VAULT_TOKEN } // Magia Nomad
    };

    logger.info('aea-hashicorp Vault init - Properties API:' + optionsVault.url );

    try{
        let response = await axios.request(optionsVault);
        if (response.status === 200) {
            for (let atr in response.data.data) {
                if (Object.prototype.hasOwnProperty.call(response.data.data,atr)) {
                    logger.info('   |--> [Load Secret] process.env.' + atr + ' = "*****"');
                    process.env[atr] = response.data.data[atr];
                }
            }
        } else {
            logger.error('aea-hashicorp Vault init - Response.status = ', response.status);
        }
    }
    catch(e){
        throw new Error('aea-hashicorp Vault init - HTTP ' + optionsVault.url + ' - ' + e);
    }

};

module.exports = { init };