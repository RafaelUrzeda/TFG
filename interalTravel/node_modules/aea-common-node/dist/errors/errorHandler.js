"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.customErrorHandler = exports.ERROR_HANDLERS = void 0;
const aea_logger_1 = require("aea-logger");
const apiError_1 = require("./apiError");
const unexpectedError_1 = require("./unexpectedError");
exports.ERROR_HANDLERS = {
    DefaultError: (res, error) => {
        aea_logger_1.logger.error(`---> Code: ${error.errorCode}, HttpStatus: ${error.status}`);
        if (error.detail)
            aea_logger_1.logger.error(`---> Details: ${error.detail}`);
        return res
            .code(error.status)
            .send({
            errorCode: error.errorCode,
            errorDescription: error.errorDescription
        });
    },
    // Handler del bad_request de fastify
    FST_ERR_VALIDATION: (res, error) => {
        return res.status(400).send({
            errorCode: 400,
            errorDescription: error.message,
            allowedValues: error.validation.length
                ? error.validation[0].params.allowedValues
                : undefined,
        });
    }
    // Añadir más handlers si se se considera necesario
};
const customErrorHandler = (error, _, res) => {
    if (error instanceof apiError_1.ApiError) {
        const handler = exports.ERROR_HANDLERS[error.type];
        return handler ? handler(res, error) : res.code(500).send(new unexpectedError_1.UnexpectedError());
    }
    const handler = exports.ERROR_HANDLERS[error.code];
    return handler ? handler(res, error) : res.code(500).send(new unexpectedError_1.UnexpectedError());
};
exports.customErrorHandler = customErrorHandler;
